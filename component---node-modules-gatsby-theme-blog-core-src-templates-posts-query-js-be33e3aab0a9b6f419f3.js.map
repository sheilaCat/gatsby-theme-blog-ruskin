{"version":3,"sources":["webpack:///./src/gatsby-theme-ui-blog/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack:///./node_modules/gatsby-theme-ui-blog/src/gatsby-theme-blog-core/components/posts.js"],"names":["posts","props","site","siteMetadata","description","title","root","py","h1","style","display","flexDirection","alignItems","width","mx","src","logo","sx","listStyle","gridGap","gridTemplateColumns","map","post","key","id","p","h3","m","to","slug","color","textDecoration","fontWeight","date","PostsPage","data","allBlogPost","edges","e","node","jsx","Posts","query"],"mappings":"+PAOe,kBAA0B,IAAvBA,EAAsB,EAAtBA,MAAUC,E,oIAAY,gBAC5B,OAWwBC,KAAKC,aAAhCC,EAZ+B,EAY/BA,YAAaC,EAZkB,EAYlBA,MAEpB,OACA,YAAC,IAAOC,KAAR,KACE,YAAC,IAAWL,EACZ,YAAC,IAAD,KACE,YAAC,IAAD,CAAKM,GAAI,IACP,YAAC,IAAOC,GAAR,KAAYJ,IAEd,mBAAKK,MAAO,CAACC,QAAQ,OAAQC,cAAe,MAAOC,WAAY,WAC7D,YAAC,IAAD,CAAQC,MAAO,GAAIC,GAAI,GAAIC,IAAKC,MAChC,YAAC,IAAD,CAAMF,GAAI,IAAKT,IAGjB,kBACEY,GAAI,CACFC,UAAW,OACXR,QAAS,OACTS,QAAS,GACTC,oBAAqB,mCAEtBpB,EAAMqB,KAAI,SAAAC,GAAI,OACb,kBAAIC,IAAKD,EAAKE,IACZ,YAAC,IAAD,CAAKC,EAAG,GAER,YAAC,IAAOC,GAAR,CACET,GAAI,CACFU,EAAG,IAEL,YAAC,IAAD,CAAMC,GAAIN,EAAKO,KACbZ,GAAI,CACFa,MAAO,UACPC,eAAgB,OAChB,gBAAiB,CACfD,MAAO,UACPC,eAAgB,eAGnBT,EAAKjB,QAGV,qBAAOY,GAAI,CAAEe,WAAY,SAAWV,EAAKW,gB,sVC3DrD,sCAEeC,UCAA,SAAAjC,GACb,IAAMD,EAAQC,EAAMkC,KAAKC,YAAYC,MAAMhB,KAAI,SAAAiB,GAAC,OAAIA,EAAEC,QAEtD,OAAOC,YAAIC,E,+VAAD,IACLxC,EADK,CAERD,YDLWkC,IAEFQ,EAAK,a","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-be33e3aab0a9b6f419f3.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Styled, Box, Container, AspectImage, Avatar, Text} from 'theme-ui'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { Layout } from 'gatsby-theme-ui-layout'\n\nimport logo from \"../../content/assets/avatar.png\";\n\nexport default ({ posts, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title,\n          description\n        }\n      }\n    }\n  `)\n\n  const {description, title} = data.site.siteMetadata;\n\n  return (\n  <Styled.root>\n    <Layout {...props}>\n    <Container>\n      <Box py={40}>\n        <Styled.h1>{description}</Styled.h1>\n      </Box>\n      <div style={{display:'flex', flexDirection: 'row', alignItems: 'center'}}>\n        <Avatar width={26} mx={10} src={logo}/>\n        <Text mx={10}>{title}</Text>\n      </div>\n\n      <ul\n        sx={{\n          listStyle: 'none',\n          display: 'grid',\n          gridGap: 69,\n          gridTemplateColumns: 'repeat(2, minmax(10px, 460px))',\n        }}>\n        {posts.map(post => (\n          <li key={post.id}>\n            <Box p={0}>\n            {/* {post.coverUrl && <AspectImage ratio={8/3} src={post.coverUrl} />} */}\n            <Styled.h3\n              sx={{\n                m: 0,\n              }}>\n              <Link to={post.slug}\n                sx={{\n                  color: 'inherit',\n                  textDecoration: 'none',\n                  ':hover,:focus': {\n                    color: 'primary',\n                    textDecoration: 'underline',\n                  }\n                }}>\n                {post.title}\n              </Link>\n            </Styled.h3>\n            <small sx={{ fontWeight: 'bold' }}>{post.date}</small>\n            </Box>\n          </li>\n        ))}\n      </ul>\n      </Container>\n    </Layout>\n  </Styled.root>\n  )\n}","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      edges {\n        node {\n          id\n          excerpt\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n        }\n      }\n    }\n  }\n`\n","import { jsx } from 'theme-ui'\nimport Posts from '../../posts'\n\nexport default props => {\n  const posts = props.data.allBlogPost.edges.map(e => e.node)\n\n  return jsx(Posts, {\n    ...props,\n    posts,\n  })\n}\n"],"sourceRoot":""}